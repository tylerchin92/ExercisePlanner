{"version":3,"sources":["components/Song.js","components/Exercise.js","components/WorkoutDay.js","components/Schedule.js","components/SongDisplay.js","pages/HomePage.js","components/Workout.js","components/WorkoutList.js","pages/WorkoutCreator.js","components/WorkoutAssign.js","components/WorkoutListFull.js","pages/WorkoutPage.js","components/ExerciseList.js","pages/EditWorkout.js","App.js","reportWebVitals.js","index.js"],"names":["Song","song","name","artists","tempo","Exercise","exercise","onEdit","onDelete","muscleGroup","weight","sets","reps","WorkoutDay","workout","exercises","map","i","Schedule","workouts","day","dayWorkout","filter","SongDisplay","songs","HomePage","useState","setWorkouts","setSongs","filteredSongs","setFilteredSongs","minTempo","setMinTempo","maxTempo","setMaxTempo","findSongs","a","fetch","response","json","data","ok","console","error","status","findWorkouts","useEffect","to","className","type","value","min","max","defaultValue","onChange","e","target","onClick","maxFilter","Workout","_id","WorkoutList","WorkoutCreator","setWorkoutToEdit","setName","history","useHistory","addWorkout","newWorkout","method","body","JSON","stringify","headers","alert","window","location","reload","loadWorkouts","placeholder","push","WorkoutAssign","assignDay","setDay","selected","disabled","hidden","WorkoutListFull","WorkoutPage","workoutToEdit","changedWorkout","log","ExerciseList","EditWorkout","updateExercises","exerciseName","addName","exerciseMuscleGroup","addMuscleGroup","exerciseWeight","addWeight","exerciseSets","addSets","exerciseReps","addReps","refresh","updateWorkout","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cbc1059.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Song({song}) {\r\n    return (\r\n        <tr>\r\n            <td>{song.name}</td>\r\n            <td>{song.artists}</td>\r\n            <td>{song.tempo}</td>\r\n        </tr>\r\n\r\n)\r\n}\r\n\r\nexport default Song","import React from 'react';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\n\r\n\r\nfunction Exercise({exercise, onEdit, onDelete}) {\r\n        return (\r\n\r\n            <tr>\r\n                <td>{exercise.name}</td>\r\n                <td>{exercise.muscleGroup}</td>\r\n                <td>{exercise.weight}</td>\r\n                <td>{exercise.sets}</td>\r\n                <td>{exercise.reps}</td>\r\n            </tr>\r\n\r\n    )\r\n};\r\n\r\nexport default Exercise","import React from 'react';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport Exercise from './Exercise';\r\n\r\n\r\nfunction WorkoutDay({workout, exercises}) {\r\n\r\n        return (\r\n            \r\n            <table>\r\n                <caption>{workout.name}</caption>\r\n                <thead>\r\n                <th>Exercise</th>\r\n                    <th>Group</th>\r\n                    <th>Weight (lbs)</th>\r\n                    <th>Sets</th>\r\n                    <th>Reps</th>\r\n                </thead>\r\n            {exercises.map((exercise, i) =>  <Exercise \r\n                exercise={exercise}\r\n                key={i} />)}\r\n            </table>\r\n            \r\n\r\n    )\r\n};\r\n\r\nexport default WorkoutDay","import React from 'react';\r\nimport Song from './Song';\r\nimport WorkoutDay from './WorkoutDay';\r\n\r\nfunction Schedule ({workouts, day}) {\r\n    \r\n    const dayWorkout = workouts.filter(workout => workout.day === day)\r\n\r\n    return (\r\n        <td>\r\n            {dayWorkout.map((workout, i) =>  <WorkoutDay \r\n                workout={workout}\r\n                exercises={workout.exercises}\r\n                key={i} />)}\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default Schedule\r\n","import React from 'react';\r\nimport Song from './Song';\r\n\r\nfunction SongDisplay({songs}) {\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Artist</th>\r\n                    <th>Tempo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {songs.map((song, i) =>  <Song \r\n                        song={song}\r\n                        key={i} />)}\r\n            </tbody>\r\n        </table>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default SongDisplay","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport Schedule from '../components/Schedule';\r\nimport SongDisplay from '../components/SongDisplay';\r\n\r\nfunction HomePage() {\r\n\r\n    const [workouts, setWorkouts] = useState([]);\r\n    const [songs, setSongs] = useState([]);\r\n    const [filteredSongs, setFilteredSongs] = useState([]);\r\n    const [minTempo, setMinTempo] = useState(0);\r\n    const [maxTempo, setMaxTempo] = useState(0);\r\n\r\n    const findSongs = async () => {\r\n        const response = await fetch('http://127.0.0.1:8000/songs');\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n            setSongs(data);\r\n        }\r\n        else {\r\n            console.error(`Could not fetch, status code = ${response.status}`)\r\n        };\r\n        \r\n    };\r\n\r\n    const filterSongs = () => {\r\n\r\n        findSongs();\r\n        \r\n        const minFilter = songs.filter(song => song.tempo >= minTempo);\r\n\r\n        const maxFilter = minFilter.filter(song => song.tempo <= maxTempo)\r\n        \r\n        setFilteredSongs(maxFilter);\r\n        \r\n    }\r\n\r\n\r\n    const findWorkouts = async () => {\r\n        const response = await fetch('/workouts');\r\n        const data = await response.json();\r\n\r\n        if (response.status === 200) {\r\n            setWorkouts(data);\r\n        }\r\n        else {\r\n            console.error(`Could not fetch, status code = ${response.status}`)\r\n        }\r\n        \r\n    };\r\n\r\n    useEffect(() => {\r\n        findWorkouts();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your Workout Schedule</h1>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th><h2>Sunday</h2></th>\r\n                    <th><h2>Monday</h2></th>\r\n                    <th><h2>Tuesday</h2></th>\r\n                    <th><h2>Wednesday</h2></th>\r\n                    <th><h2>Thursday</h2></th>\r\n                    <th><h2>Friday</h2></th>\r\n                    <th><h2>Saturday</h2></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody> \r\n                <tr>\r\n                    <Schedule workouts = {workouts} day ={'Sunday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Monday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Tuesday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Wednesday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Thursday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Friday'} ></Schedule>\r\n                    <Schedule workouts = {workouts} day ={'Saturday'} ></Schedule>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n            <Link to='/workouts' className='App-link'>View and Assign Workouts</Link>\r\n            <br />\r\n            <Link to='/create-workout' className='App-link'>Create a Workout</Link>\r\n            <br />\r\n            <h2>Workout Song Recommendations</h2>\r\n            <div>\r\n                <label>Set Minimum Tempo</label>\r\n                <input \r\n                    type='number' \r\n                    value={minTempo} \r\n                    min='0'\r\n                    max='200'\r\n                    defaultValue='0'  \r\n                    onChange={e => setMinTempo(e.target.value)} />\r\n                <br />\r\n                <label>Set Maximum Tempo</label>\r\n                <input \r\n                    type='number' \r\n                    value={maxTempo} \r\n                    max='200'  \r\n                    defaultValue='200'\r\n                    onChange={e => setMaxTempo(e.target.value)} />\r\n                <br />\r\n                <button onClick= {filterSongs}>Request New Songs</button>\r\n            </div>\r\n            <SongDisplay songs = {filteredSongs}></SongDisplay>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage","import React from 'react';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\n\r\n\r\nfunction Workout({workout, onEdit, onDelete}) {\r\n        return (\r\n\r\n            <tr>\r\n                <td>{workout.name}</td>\r\n                <td><AiOutlineEdit onClick={() => onEdit(workout)} /></td>\r\n                <td><AiOutlineDelete onClick={() => onDelete(workout._id)}/></td>\r\n            </tr>\r\n\r\n    )\r\n};\r\n\r\nexport default Workout","import React from 'react';\r\nimport Workout from './Workout';\r\n\r\n\r\nfunction WorkoutList({workouts, onDelete, onEdit}) {\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Edit/View Workout</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {workouts.map((workout, i) =>  <Workout \r\n                    workout={workout}\r\n                    onDelete = {onDelete}\r\n                    onEdit = {onEdit}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default WorkoutList","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport WorkoutList from '../components/WorkoutList';\r\n\r\n\r\nfunction WorkoutCreator({setWorkoutToEdit}) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [exercises, setExercises] = useState('');\r\n    const [workouts, setWorkouts] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const addWorkout = async () => {\r\n        const newWorkout = { name, exercises };\r\n        const response = await fetch('/create-workout', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newWorkout),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        \r\n        if (response.status === 201) {\r\n            \r\n        } else {\r\n            alert(`Failed to add workout, status code = ${response.status}`);\r\n        }\r\n        window.location.reload(false)\r\n    };\r\n\r\n    const onEdit = workout => {\r\n        setWorkoutToEdit(workout);\r\n        history.push('/edit-workout')\r\n    }\r\n\r\n    const onDelete = async _id => {\r\n        const response = await fetch(`/workouts/${_id}`, {method: 'DELETE'});\r\n\r\n        if (response.status === 204) {\r\n            setWorkouts(workouts.filter(e => e._id !== _id));\r\n        }\r\n        else {\r\n            console.error(`Failed to delete workout with _id = ${_id}, status code = ${response.status}`)\r\n        }\r\n    };\r\n\r\n    const loadWorkouts = async () => {\r\n        const response = await fetch('/workouts');\r\n        const data = await response.json();\r\n        setWorkouts(data);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        loadWorkouts();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Create a Workout</h1>\r\n            <input\r\n                type='text'\r\n                value={name}\r\n                placeholder='New Workout Name'\r\n                onChange={e => setName(e.target.value)} />\r\n            <button onClick={addWorkout}>Create</button>\r\n            <br></br>\r\n            <WorkoutList workouts = {workouts} onEdit = {onEdit} onDelete = {onDelete}></WorkoutList>\r\n            <br></br>\r\n            <Link to='/' className='App-link'>Return to Home</Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WorkoutCreator","import React from 'react';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\n\r\n\r\nfunction WorkoutAssign({workout, onEdit, onDelete, assignDay, setDay}) {\r\n        return (\r\n            <tr>\r\n                <td>{workout.name}</td>\r\n                <td><select onChange={e => setDay(e.target.value)}>\r\n                    <option value=\"none\" selected disabled hidden>\r\n                        Select an Option\r\n                    </option>\r\n                    <option>Sunday</option>\r\n                    <option>Monday</option>\r\n                    <option>Tuesday</option>\r\n                    <option>Wednesday</option>\r\n                    <option>Thursday</option>\r\n                    <option>Friday</option>\r\n                    <option>Saturday</option>\r\n                    <option value=\"\">Unassign</option>\r\n                    </select>\r\n                    <button onClick={() => assignDay(workout._id)}>Submit</button>\r\n                </td>\r\n                <td><AiOutlineEdit onClick={() => onEdit(workout)} /></td>\r\n                <td><AiOutlineDelete onClick={() => onDelete(workout._id)}/></td>\r\n            </tr>\r\n    )\r\n};\r\n\r\nexport default WorkoutAssign","import React from 'react';\r\nimport WorkoutAssign from './WorkoutAssign';\r\n\r\n\r\nfunction WorkoutListFull({workouts, onDelete, onEdit, assignDay, setDay}) {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your Workouts</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Assign Workout</th>\r\n                        <th>Edit/View Workout</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {workouts.map((workout, i) =>  <WorkoutAssign \r\n                        workout={workout}\r\n                        assignDay = {assignDay}\r\n                        onDelete = {onDelete}\r\n                        onEdit = {onEdit}\r\n                        setDay = {setDay}\r\n                        key={i} />)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WorkoutListFull","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport WorkoutListFull from '../components/WorkoutListFull';\r\n\r\n\r\nfunction WorkoutPage ({setWorkoutToEdit, workoutToEdit}) {\r\n\r\n    const [workouts, setWorkouts] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [exercises, updateExercises] = useState('');\r\n    const [day, setDay] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onEdit = workout => {\r\n        setWorkoutToEdit(workout);\r\n        history.push('/edit-workout')\r\n    }\r\n\r\n    const onDelete = async _id => {\r\n        const response = await fetch(`/workouts/${_id}`, {method: 'DELETE'});\r\n\r\n        if (response.status === 204) {\r\n            setWorkouts(workouts.filter(e => e._id !== _id));\r\n        }\r\n        else {\r\n            console.error(`Failed to delete workout with _id = ${_id}, status code = ${response.status}`)\r\n        }\r\n    };\r\n\r\n    const assignDay = async _id => {\r\n\r\n        const changedWorkout = {name, exercises, day};\r\n        \r\n        const response = await fetch(`/days/${_id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(changedWorkout),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            console.log(\"Successfully edited exercise\")\r\n        }\r\n        else {\r\n            alert(`Failed to edit exercise, status code = ${response.status}`)\r\n        }\r\n    };\r\n\r\n\r\n    const loadWorkouts = async () => {\r\n        const response = await fetch('/workouts');\r\n        const data = await response.json();\r\n        setWorkouts(data);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        loadWorkouts();\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <WorkoutListFull workouts = {workouts} onEdit = {onEdit} onDelete = {onDelete} assignDay = {assignDay} setDay={setDay}></WorkoutListFull>\r\n            <br></br>\r\n            <Link to='/create-workout' className='App-link'>Create another Workout</Link>\r\n            <br></br>\r\n            <Link to='/' className='App-link'>Return to Home</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkoutPage","import React from 'react';\r\nimport Exercise from './Exercise';\r\n\r\nfunction ExerciseList({exercises}) {\r\n    return(\r\n            <tbody>\r\n                {exercises.map((exercise, i) =>  <Exercise \r\n                    exercise={exercise}\r\n                    key={i} />)}\r\n            </tbody>\r\n\r\n    )\r\n}\r\n\r\nexport default ExerciseList","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ExerciseList from '../components/ExerciseList';\r\n\r\nfunction EditWorkout({workoutToEdit}) {\r\n\r\n    const [name, setName] = useState(workoutToEdit.name);\r\n    const [exercises, updateExercises] = useState(workoutToEdit.exercises);\r\n    const [day, setDay] = useState(workoutToEdit.day);\r\n    const [exerciseName, addName] = useState('');\r\n    const [exerciseMuscleGroup, addMuscleGroup] = useState('');\r\n    const [exerciseWeight, addWeight] = useState(0);\r\n    const [exerciseSets, addSets] = useState(0);\r\n    const [exerciseReps, addReps] = useState(0);\r\n    const [page, refresh] = useState();\r\n\r\n    const history = useHistory();\r\n\r\n    const updateWorkout = async () => {\r\n\r\n        const exercise = {name: exerciseName, muscleGroup: exerciseMuscleGroup, weight: exerciseWeight , sets: exerciseSets, reps: exerciseReps};\r\n        exercises.push(exercise);\r\n        updateExercises(exercises);\r\n        const changedWorkout = {name, exercises};\r\n        const response = await fetch(`/workouts/${workoutToEdit._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(changedWorkout),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            console.log('Workout update successful');\r\n        }\r\n        else {\r\n            alert(`Failed to edit exercise, status code = ${response.status}`)\r\n        }\r\n        refresh({});\r\n    };\r\n\r\n    const assignDay = async () => {\r\n\r\n        const changedWorkout = {name, exercises, day};\r\n        \r\n        const response = await fetch(`/days/${workoutToEdit._id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(changedWorkout),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if (response.status === 200) {\r\n            console.log('Day assigned')\r\n        }\r\n        else {\r\n            alert(`Failed to edit exercise, status code = ${response.status}`)\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h1>{ name }</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th>Muscle Group</th>\r\n                        <th>Weight (lbs)</th>\r\n                        <th>Sets</th>\r\n                        <th>Reps</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                value={exerciseName}\r\n                                onChange={e => addName(e.target.value)}/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                value={exerciseMuscleGroup}\r\n                                onChange={e => addMuscleGroup(e.target.value)}/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                value={exerciseWeight}\r\n                                onChange={e => addWeight(e.target.value)}/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                value={exerciseSets}\r\n                                onChange={e => addSets(e.target.value)}/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                type='text'\r\n                                value={exerciseReps}\r\n                                onChange={e => addReps(e.target.value)}/>\r\n                        </td>\r\n                        <td><button onClick={updateWorkout}>Add Exercise</button></td>\r\n                    </tr>\r\n                </tbody>\r\n                <ExerciseList exercises = {exercises}></ExerciseList>\r\n            </table>\r\n\r\n            <h4>Assign Workout to a Day</h4>\r\n            <select onChange={e => setDay(e.target.value)}>\r\n                    <option value=\"none\" selected disabled hidden>\r\n                        Select an Option\r\n                    </option>\r\n                    <option>Sunday</option>\r\n                    <option>Monday</option>\r\n                    <option>Tuesday</option>\r\n                    <option>Wednesday</option>\r\n                    <option>Thursday</option>\r\n                    <option>Friday</option>\r\n                    <option>Saturday</option>\r\n                    </select>\r\n                    <button onClick={assignDay}>Submit</button>\r\n            <br></br>\r\n            <Link to='/create-workout' className='App-link'>Create another Workout</Link>\r\n            <br></br>\r\n            <Link to='/' className='App-link'>Return to Home</Link>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditWorkout","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport HomePage from './pages/HomePage';\nimport WorkoutCreator from './pages/WorkoutCreator';\nimport WorkoutPage from './pages/WorkoutPage';\nimport EditWorkout from './pages/EditWorkout';\n\nfunction App() {\n\n  const [workoutToEdit, setWorkoutToEdit] = useState();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n          <Route path='/workouts'>\n            <WorkoutPage setWorkoutToEdit = {setWorkoutToEdit} workoutToEdit = {workoutToEdit} />\n          </Route>\n          <Route path='/create-workout'>\n            <WorkoutCreator setWorkoutToEdit = {setWorkoutToEdit}/>\n          </Route>\n          <Route path='/edit-workout'>\n            <EditWorkout workoutToEdit = {workoutToEdit}/>\n          </Route>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}